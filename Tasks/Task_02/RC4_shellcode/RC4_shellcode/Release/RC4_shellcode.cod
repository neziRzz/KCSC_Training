; Listing generated by Microsoft (R) Optimizing Compiler Version 19.41.34120.0 

	TITLE	d:\reversing\shellcode\rc4\rc4_shellcode\rc4_shellcode\release\rc4_shellcode.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0M@HPHIKGGA@Enter?5key?3?5@		; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_0BI@IKHPAAFE@Enter?5data?5to?5encrypt?3?5@ ; `string'
PUBLIC	??_C@_0BB@MJHPCJMD@Encrypted?5data?3?5@		; `string'
PUBLIC	??_C@_05BFHEBJNP@?$CF02X?5@			; `string'
PUBLIC	_rc4_shellcode
EXTRN	__imp__fgets:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp__strcspn:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__VirtualAlloc@16:PROC
EXTRN	___report_rangecheckfailure:PROC
EXTRN	__imp__VirtualFree@12:PROC
EXTRN	@__security_check_cookie@4:PROC
_rc4_shellcode DB 055H
	DB	08bH
	DB	0ecH
	DB	081H
	DB	0ecH
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	053H
	DB	08bH
	DB	05dH
	DB	010H
	DB	056H
	DB	08bH
	DB	075H
	DB	014H
	DB	057H
	DB	033H
	DB	0ffH
	DB	033H
	DB	0c9H
	DB	08bH
	DB	0c1H
	DB	088H
	DB	08cH
	DB	0dH
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	099H
	DB	0f7H
	DB	0feH
	DB	08aH
	DB	04H
	DB	01aH
	DB	088H
	DB	084H
	DB	0dH
	DB	00H
	DB	0feH
	DB	0ffH
	DB	0ffH
	DB	041H
	DB	081H
	DB	0f9H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	07cH
	DB	0e1H
	DB	033H
	DB	0f6H
	DB	033H
	DB	0dbH
	DB	0fH
	DB	01fH
	DB	080H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08aH
	DB	094H
	DB	035H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0fH
	DB	0b6H
	DB	084H
	DB	035H
	DB	00H
	DB	0feH
	DB	0ffH
	DB	0ffH
	DB	03H
	DB	0f8H
	DB	0fH
	DB	0b6H
	DB	0caH
	DB	03H
	DB	0f9H
	DB	081H
	DB	0e7H
	DB	0ffH
	DB	00H
	DB	00H
	DB	080H
	DB	079H
	DB	08H
	DB	04fH
	DB	081H
	DB	0cfH
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	047H
	DB	08aH
	DB	084H
	DB	03dH
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	088H
	DB	094H
	DB	03dH
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	088H
	DB	084H
	DB	035H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	046H
	DB	081H
	DB	0feH
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	07cH
	DB	0bcH
	DB	08bH
	DB	07dH
	DB	0cH
	DB	033H
	DB	0f6H
	DB	085H
	DB	0ffH
	DB	07eH
	DB	06eH
	DB	08bH
	DB	055H
	DB	018H
	DB	029H
	DB	055H
	DB	08H
	DB	043H
	DB	081H
	DB	0e3H
	DB	0ffH
	DB	00H
	DB	00H
	DB	080H
	DB	079H
	DB	08H
	DB	04bH
	DB	081H
	DB	0cbH
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	043H
	DB	08aH
	DB	08cH
	DB	01dH
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0fH
	DB	0b6H
	DB	0c1H
	DB	03H
	DB	0f0H
	DB	081H
	DB	0e6H
	DB	0ffH
	DB	00H
	DB	00H
	DB	080H
	DB	079H
	DB	08H
	DB	04eH
	DB	081H
	DB	0ceH
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	046H
	DB	08aH
	DB	084H
	DB	035H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	088H
	DB	08cH
	DB	035H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	088H
	DB	084H
	DB	01dH
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0fH
	DB	0b6H
	DB	08cH
	DB	035H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0fH
	DB	0b6H
	DB	0c0H
	DB	03H
	DB	0c8H
	DB	0fH
	DB	0b6H
	DB	0c1H
	DB	08bH
	DB	04dH
	DB	08H
	DB	0fH
	DB	0b6H
	DB	084H
	DB	05H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	032H
	DB	04H
	DB	011H
	DB	088H
	DB	02H
	DB	042H
	DB	083H
	DB	0efH
	DB	01H
	DB	075H
	DB	098H
	DB	05fH
	DB	05eH
	DB	05bH
	DB	08bH
	DB	0e5H
	DB	05dH
	DB	0c3H
CONST	ENDS
;	COMDAT ??_C@_05BFHEBJNP@?$CF02X?5@
CONST	SEGMENT
??_C@_05BFHEBJNP@?$CF02X?5@ DB '%02X ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MJHPCJMD@Encrypted?5data?3?5@
CONST	SEGMENT
??_C@_0BB@MJHPCJMD@Encrypted?5data?3?5@ DB 'Encrypted data: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IKHPAAFE@Enter?5data?5to?5encrypt?3?5@
CONST	SEGMENT
??_C@_0BI@IKHPAAFE@Enter?5data?5to?5encrypt?3?5@ DB 'Enter data to encryp'
	DB	't: ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HPHIKGGA@Enter?5key?3?5@
CONST	SEGMENT
??_C@_0M@HPHIKGGA@Enter?5key?3?5@ DB 'Enter key: ', 00H	; `string'
CONST	ENDS
PUBLIC	_main
PUBLIC	_j_strlen
PUBLIC	_printf
PUBLIC	__vfprintf_l
PUBLIC	___local_stdio_printf_options
EXTRN	___security_cookie:DWORD
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
; Function compile flags: /Ogtp
;	COMDAT _main
_TEXT	SEGMENT
_alloc_mem$1$ = -780					; size = 4
_keyLen$1$ = -776					; size = 4
_result$ = -772						; size = 256
_data$ = -516						; size = 256
_key$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_main	PROC						; COMDAT
; File D:\Reversing\Shellcode\RC4\RC4_shellcode\RC4_shellcode\RC4_shellcode.c
; Line 40
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 03 00
	00		 sub	 esp, 780		; 0000030cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
; Line 48
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HPHIKGGA@Enter?5key?3?5@
  0001b	e8 00 00 00 00	 call	 _printf
; Line 49
  00020	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp____acrt_iob_func
  00026	6a 00		 push	 0
  00028	ff d7		 call	 edi
  0002a	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__fgets
  00030	50		 push	 eax
  00031	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _key$[ebp]
  00037	68 00 01 00 00	 push	 256			; 00000100H
  0003c	50		 push	 eax
  0003d	ff d3		 call	 ebx
  0003f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__strcspn
  00045	83 c4 14	 add	 esp, 20			; 00000014H
  00048	85 c0		 test	 eax, eax
  0004a	74 24		 je	 SHORT $LN8@main
; Line 51
  0004c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _key$[ebp]
  00052	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00057	50		 push	 eax
  00058	ff d6		 call	 esi
  0005a	83 c4 08	 add	 esp, 8
  0005d	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  00062	0f 83 23 01 00
	00		 jae	 $LN13@main
  00068	c6 84 05 fc fe
	ff ff 00	 mov	 BYTE PTR _key$[ebp+eax], 0
$LN8@main:
; Line 55
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@IKHPAAFE@Enter?5data?5to?5encrypt?3?5@
  00075	e8 00 00 00 00	 call	 _printf
; Line 56
  0007a	6a 00		 push	 0
  0007c	ff d7		 call	 edi
  0007e	50		 push	 eax
  0007f	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$[ebp]
  00085	68 00 01 00 00	 push	 256			; 00000100H
  0008a	50		 push	 eax
  0008b	ff d3		 call	 ebx
  0008d	83 c4 14	 add	 esp, 20			; 00000014H
  00090	85 c0		 test	 eax, eax
  00092	74 24		 je	 SHORT $LN9@main
; Line 58
  00094	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$[ebp]
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  0009f	50		 push	 eax
  000a0	ff d6		 call	 esi
  000a2	83 c4 08	 add	 esp, 8
  000a5	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  000aa	0f 83 db 00 00
	00		 jae	 $LN13@main
  000b0	c6 84 05 fc fd
	ff ff 00	 mov	 BYTE PTR _data$[ebp+eax], 0
$LN9@main:
; Line 60
  000b8	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _key$[ebp]
  000be	e8 00 00 00 00	 call	 _j_strlen
; Line 61
  000c3	8d 8d fc fd ff
	ff		 lea	 ecx, DWORD PTR _data$[ebp]
  000c9	89 85 f8 fc ff
	ff		 mov	 DWORD PTR _keyLen$1$[ebp], eax
  000cf	e8 00 00 00 00	 call	 _j_strlen
; Line 62
  000d4	6a 40		 push	 64			; 00000040H
  000d6	68 00 30 00 00	 push	 12288			; 00003000H
  000db	68 02 01 00 00	 push	 258			; 00000102H
  000e0	6a 00		 push	 0
  000e2	8b d8		 mov	 ebx, eax
  000e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VirtualAlloc@16
; Line 67
  000ea	8b f8		 mov	 edi, eax
  000ec	89 85 f4 fc ff
	ff		 mov	 DWORD PTR _alloc_mem$1$[ebp], eax
  000f2	be 00 00 00 00	 mov	 esi, OFFSET _rc4_shellcode
  000f7	8d 88 01 01 00
	00		 lea	 ecx, DWORD PTR [eax+257]
  000fd	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00102	f3 a5		 rep movsd
  00104	8d 8d fc fc ff
	ff		 lea	 ecx, DWORD PTR _result$[ebp]
  0010a	51		 push	 ecx
  0010b	ff b5 f8 fc ff
	ff		 push	 DWORD PTR _keyLen$1$[ebp]
  00111	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _key$[ebp]
  00117	66 a5		 movsw
  00119	51		 push	 ecx
  0011a	8d 8d fc fd ff
	ff		 lea	 ecx, DWORD PTR _data$[ebp]
  00120	53		 push	 ebx
  00121	51		 push	 ecx
  00122	ff d0		 call	 eax
  00124	83 c4 14	 add	 esp, 20			; 00000014H
; Line 68
  00127	68 00 80 00 00	 push	 32768			; 00008000H
  0012c	68 02 01 00 00	 push	 258			; 00000102H
  00131	ff b5 f4 fc ff
	ff		 push	 DWORD PTR _alloc_mem$1$[ebp]
  00137	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VirtualFree@12
; Line 69
  0013d	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@MJHPCJMD@Encrypted?5data?3?5@
  00142	e8 00 00 00 00	 call	 _printf
  00147	83 c4 04	 add	 esp, 4
  0014a	33 f6		 xor	 esi, esi
; Line 70
  0014c	85 db		 test	 ebx, ebx
  0014e	7e 1b		 jle	 SHORT $LN6@main
$LL7@main:
; Line 71
  00150	0f b6 84 35 fc
	fc ff ff	 movzx	 eax, BYTE PTR _result$[ebp+esi]
  00158	50		 push	 eax
  00159	68 00 00 00 00	 push	 OFFSET ??_C@_05BFHEBJNP@?$CF02X?5@
  0015e	e8 00 00 00 00	 call	 _printf
  00163	46		 inc	 esi
  00164	83 c4 08	 add	 esp, 8
  00167	3b f3		 cmp	 esi, ebx
  00169	7c e5		 jl	 SHORT $LL7@main
$LN6@main:
; Line 73
  0016b	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00170	e8 00 00 00 00	 call	 _printf
; Line 76
  00175	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00178	83 c4 04	 add	 esp, 4
  0017b	33 cd		 xor	 ecx, ebp
  0017d	33 c0		 xor	 eax, eax
  0017f	5f		 pop	 edi
  00180	5e		 pop	 esi
  00181	5b		 pop	 ebx
  00182	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00187	8b e5		 mov	 esp, ebp
  00189	5d		 pop	 ebp
  0018a	c3		 ret	 0
$LN13@main:
; Line 58
  0018b	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN38@main:
  00190	cc		 int	 3
_main	ENDP
_TEXT	ENDS
END
